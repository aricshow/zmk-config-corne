#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Window-Left {
            bindings = <&kp LG(LC(LEFT))>;
            key-positions = <19 20>;
        };

        Window-Middle {
            bindings = <&kp LG(LC(UP_ARROW))>;
            key-positions = <19 20 21>;
        };

        Window-Right {
            bindings = <&kp LG(LC(RIGHT))>;
            key-positions = <20 21>;
        };
    };

    //

    macros {
        string_1: string_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp LS(I) &kp S &kp LS(A) &kp LS(T) &kp E &kp S &kp T>;
            label = "STRING_1";
        };

        string_2: string_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp LS(I) &kp S &kp LS(A) &kp L &kp S &kp O &kp LS(A) &kp LS(T) &kp E &kp S &kp T>;
            label = "STRING_2";
        };

        string_3: string_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp LS(I) &kp S &kp LS(T) &kp H &kp E &kp LS(F) &kp I &kp N &kp A &kp L &kp LS(T) &kp E &kp S &kp T>;
            label = "STRING_3";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E             &kp R  &kp T               &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB         &kp A  &kp S  &kp D             &kp F  &kp G               &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V  &kp B               &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                              &kp LEFT_CONTROL  &mo 2  &kp LEFT_COMMAND    &kp SPACE  &mo 1  &kp LALT
            >;
        };

        LOWER {
            bindings = <
&kp GRAVE  &kp C_VOLUME_UP  &kp HOME        &kp UP            &kp END     &kp PAGE_UP       &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans     &kp C_VOLUME_UP  &kp LEFT        &kp DOWN          &kp RIGHT   &kp PAGE_DOWN     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans     &kp K_MUTE       &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_AL_MUSIC    &trans  &trans  &trans  &trans   &trans   &trans
                                            &trans            &trans      &trans            &trans  &trans  &trans
            >;
        };

        RAISE {
            bindings = <
&kp GRAVE     &kp EXCL      &kp AT_SIGN   &kp POUND      &kp DOLLAR    &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp N7        &kp N8      &kp N9  &kp EQUAL      &kp DEL
&kp CAPS      &kp PERCENT   &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp N4        &kp N5      &kp N6  &kp MINUS      &kp INSERT
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp NUMBER_1  &kp N2      &kp N3  &kp BACKSLASH  &kp PIPE
                                          &trans         &trans        &trans                  &kp N0                 &trans        &kp KP_DOT
            >;
        };

        Mouse-Macros {
            bindings = <
&trans  &trans  &mkp LCLK         &mmv MOVE_UP    &mkp RCLK          &msc SCROLL_UP      &trans  &string_1  &string_2  &string_3  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_DOWN    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &mwh SCROLL_LEFT  &trans          &mwh SCROLL_RIGHT  &trans              &trans  &trans     &trans     &trans     &trans  &trans
                                  &trans          &trans             &trans              &trans  &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

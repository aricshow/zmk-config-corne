#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define MACROS 3
#define extra1 4

/ {
    combos {
        compatible = "zmk,combos";

        Window-Left {
            bindings = <&kp LG(LC(LEFT))>;
            key-positions = <19 20>;
        };

        Window-Middle {
            bindings = <&kp LG(LC(UP_ARROW))>;
            key-positions = <19 20 21>;
        };

        Window-Right {
            bindings = <&kp LG(LC(RIGHT))>;
            key-positions = <20 21>;
        };

        window-bottom-left {
            bindings = <&kp LC(LA(LG(LEFT)))>;
            key-positions = <31 32>;
        };

        window-bottom-right {
            bindings = <&kp LC(LA(LG(DOWN)))>;
            key-positions = <32 33>;
        };

        window-top-left {
            bindings = <&kp LA(LC(LG(UP_ARROW)))>;
            key-positions = <7 8>;
        };

        window-top-right {
            bindings = <&kp LA(LC(LG(RIGHT)))>;
            key-positions = <8 9>;
        };

        window-full-screen {
            bindings = <&kp LC(LG(DOWN))>;
            key-positions = <19 21>;
        };

        bt0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <0 1>;
        };

        bt1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <0 2>;
        };

        bt2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <0 3>;
        };

        bt3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <0 4>;
        };

        bt4 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <0 5>;
        };

        clear_bt {
            bindings = <&bt BT_CLR>;
            key-positions = <11 0>;
        };
    };

    //

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Mod";
            #binding-cells = <2>;
            bindings = <&mt>, <&kp>;

            tapping-term-ms = <350>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
        };
    };

    macros {
        text1: text1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp S &kp E &kp R &kp T &kp LS(T) &kp E &kp X &kp T &kp N1>;
            label = "TEXT1";
        };

        text2: text2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp S &kp E &kp R &kp T &kp LS(T) &kp E &kp X &kp T &kp N2>;
            label = "TEXT2";
        };

        text3: text3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp S &kp E &kp R &kp T &kp LS(T) &kp E &kp X &kp T &kp NUMBER_3>;
            label = "TEXT3";
        };

        text4: text4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp S &kp E &kp R &kp T &kp LS(T) &kp E &kp X &kp T &kp NUMBER_4>;
            label = "TEXT4";
        };

        text5: text5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp S &kp E &kp R &kp T &kp LS(T) &kp E &kp X &kp T &kp N5>;
            label = "TEXT5";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E         &kp R  &kp T         &kp Y      &kp U  &kp I      &kp O    &kp P          &kp BSPC
&kp TAB         &kp A  &kp S  &kp D         &kp F  &kp G         &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B         &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                              &kp LEFT_GUI  &mo 2  &kp RETURN    &kp SPACE  &mo 1  &kp LALT
            >;

            label = "Base";
        };

        LOWER {
            bindings = <
&kp GRAVE   &kp EXCL     &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp C_VOLUME_UP    &kp HOME        &kp UP_ARROW  &kp END     &kp PAGE_UP         &kp LA(BACKSPACE)
&caps_word  &kp POUND    &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp C_VOLUME_DOWN  &kp LEFT        &kp DOWN      &kp RIGHT   &kp PAGE_DOWN       &sk RIGHT_CONTROL
&trans      &kp PERCENT  &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ASTERISK     &kp C_RW           &kp C_PREVIOUS  &kp C_PP      &kp C_NEXT  &kp C_FAST_FORWARD  &trans
                                     &trans                &trans                 &trans           &trans             &trans          &trans
            >;

            label = "Lower";
        };

        RAISE {
            bindings = <
&kp GRAVE  &kp F1  &kp F2   &kp F3   &kp F4   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS       &kp DEL
&kp CAPS   &kp F5  &kp F6   &kp F7   &kp F8   &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS      &kp INSERT
&trans     &kp F9  &kp F10  &kp F11  &kp F12  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSLASH  &kp KP_EQUAL
                            &trans   &trans   &trans                  &kp N0                 &trans           &kp KP_DOT
            >;

            label = "Raise";
        };

        MACROS {
            bindings = <
&trans  &kp F13  &kp F14  &kp F15  &kp F16  &text3    &text1  &trans         &trans         &trans             &trans           &hm C_POWER C_SLEEP
&trans  &kp F17  &kp F18  &kp F19  &kp F20  &text4    &text2  &sk RIGHT_GUI  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &sk RIGHT_SHIFT  &trans
&trans  &kp F21  &kp F22  &kp F23  &kp F24  &text5    &trans  &trans         &trans         &trans             &trans           &trans
                          &trans   &trans   &trans    &trans  &trans         &trans
            >;

            label = "Macros";
        };

        extra1 { status = "reserved"; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
